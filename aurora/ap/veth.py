# Python veth class
# Configures and runs the veth program by Néstor Peña
# Only known website at time of writing is 
# http://www.geocities.ws/nestorjpg/veth/index.html

import subprocess
class Veth:    

    def __init__(self):
        self.process_list = {}

    def start(self, real, virtual, mac=0):
        """Starts an instance of vethd.  Returns PID.
        
        virtual = Name you want in the VIRTUAL device, for example: veth0
        real = Name of the REAL device, for example: eth0, eth1
        mac = MAC address desired, like this: 00:11:22:33:44:55
        
        If mac is not specified, it is generated by the kernel."""
        if mac != 0 :
            command = ["vethd","-e", real, "-v", virtual,"-m", mac]
        else:
            command = ["vethd","-e", real,"-v", virtual]

        process = subprocess.Popen(command)
        self.process_list[process.pid] = process
        
        return process.pid
        

    def stop(self, pid):
        """Stops the process with given PID, assuming it is a vethd process."""
        process = self.process_list.pop(pid)
        process.terminate()
        # Need .wait(), otherwise process hangs around as defunct.
        process.wait()


    def kill_all(self):
        """Kills all known vethd processes."""
        for key in self.process_list:
            process = self.process_list.pop(key)
            process.terminate()
            process.wait()
